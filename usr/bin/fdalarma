#!/bin/bash
#
# script to manage dalarma timers with fzf. It parses current running alarmas
# from /tmp/dalarma/ and opens them in fzf
#
# keys:
# * enter - edit timer (open in vim)
# * ctrl-d - remove timer
#
# shellcheck disable=1090 # non-constant `source "somefile"`
# shellcheck disable=1091 # following file: does not exist

script_root=$(dirname "$(realpath "$0")")/../share/dalarma
source "$script_root"/utils.sh

format_lines() {
    for pid in $pids; do
        # `source` exposes next variables: (to suppress shellcheck warning)
        declare title started_at sleep_time raw_user_sleep_time
        source "$DALARMAS_PATH/$pid"

        remaining_min=$(calc_remaining_min "$sleep_time" "$started_at")

        echo "$pid $started_at +${remaining_min}m ($raw_user_sleep_time) $title"
    done
}

#### functions to be exposed to fzf

# shellcheck disable=2317 # unused function. Actually used in fzf
edit_pid() {
    pid="$1"

    # `source` exposes next variables: (to suppress shellcheck warning)
    declare title started_at sleep_time raw_user_sleep_time
    source "$DALARMAS_PATH/$pid"

    remaining_min=$(calc_remaining_min "$sleep_time" "$started_at")

    editfile="$DALARMAS_PATH/editing"
    {
        echo "dalarma ${remaining_min}m $title"
        echo "# was started at $started_at"
        echo "# had to wait $sleep_time"
    } > "$editfile"
    vim "$editfile"
    (nohup sh "$editfile" &> /dev/null) & delete_pid "$pid"
    # TODO: idk should we remove $editfile . It's hard
}
export -f edit_pid

# shellcheck disable=2317 # unused function. Actually used in fzf
delete_pid() {
    pid="$1"

    kill "$(basename "$pid")"
    rm "$DALARMAS_PATH/$pid"
}
export -f delete_pid

####

pids=$(pgrep -x dalarma)

format_lines "$pids" \
    | SHELL=bash fzf --with-nth 2.. \
    --bind "enter:execute(edit_pid {1})+become($0)" \
    --bind "ctrl-d:execute(delete_pid {1})+become($0)"
